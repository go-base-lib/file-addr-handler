package fileaddrhandler

import (
	"encoding/base64"
	"github.com/stretchr/testify/assert"
	"io"
	"io/ioutil"
	"net/http"
	"net/http/httptest"
	"net/url"
	"os"
	"testing"
)

var (
	srcFile    = "test.pdf"
	targetFile = "test_copy.pdf"

	chineseSrcFile = "中文测试.pdf"
)

var (
	uploadHttpHandFunc http.HandlerFunc = func(writer http.ResponseWriter, request *http.Request) {

		if token := request.FormValue("token"); token != "123456" {
			writer.WriteHeader(http.StatusInternalServerError)
			return
		}

		if token := request.Header.Get("_t"); token != "123456" {
			writer.WriteHeader(http.StatusInternalServerError)
			return
		}

		// 从表单中获取文件 pdfFile 为 js接口中的fieldName字段
		file, _, err := request.FormFile("pdfFile")
		if err != nil {
			writer.WriteHeader(500)
			return
		}
		defer file.Close()

		// 获取文件详细内容
		allBytes, err := ioutil.ReadAll(file)
		if err != nil {
			writer.WriteHeader(500)
			return
		}

		// 保存文件内容
		if err = ioutil.WriteFile(targetFile, allBytes, 0655); err != nil {
			writer.WriteHeader(500)
			return
		}

		// 向客户端返回200状态吗，状态码<200或>299即为上传失败
		writer.WriteHeader(200)
	}

	downloadHttpHandFunc http.HandlerFunc = func(writer http.ResponseWriter, request *http.Request) {
		filePath := request.RequestURI[1:]

		if stat, err := os.Stat(filePath); err != nil || stat.IsDir() {
			writer.WriteHeader(404)
			return
		}

		f, err := os.OpenFile(filePath, os.O_RDONLY, 0655)
		if err != nil {
			writer.WriteHeader(404)
			return
		}
		defer f.Close()

		_, _ = io.Copy(writer, f)
	}
)

func TestMimeJudgeReg(t *testing.T) {

	a := assert.New(t)

	b64Data := ""
	mimeB64 := "data:image/png;base64," + b64Data
	a.True(mimeTypeJudgeReg.MatchString(mimeB64), "MIME格式验证错误")
	a.True(mimeTypeJudgeReg.MatchString("data:application/pdf;base64,iVBsdf"))

	a.False(mimeTypeJudgeReg.MatchString("http://127.0.01:6666/test"))
	a.False(mimeTypeJudgeReg.MatchString("file://C\\Windows\\System32"))

}

func TestParser_FileProtoWrite(t *testing.T) {

	defer os.RemoveAll(targetFile)

	a := assert.New(t)

	parser := New(FileTypePDF)

	_, err := parser.CopyWithOption(WithEmptySourceOption().SetUri("file://"+targetFile), WithEmptyTargetOption().SetWriter(os.Stdout))
	if !a.True(ErrCodeProtoFileOpen.Equal(err)) {
		return
	}

	ft, err := parser.CopyByURI("file://"+srcFile, "file://"+targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(ft, FileTypePDF) {
		return
	}

	stat, err := os.Stat(targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.False(stat.IsDir()) {
		return
	}

	srcBytes, err := ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err := ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	a.Equal(srcBytes, targetBytes)
}

func TestParser_HttpProtoWrite(t *testing.T) {
	var err error
	defer os.RemoveAll(targetFile)

	a := assert.New(t)

	httpServer := httptest.NewServer(downloadHttpHandFunc)
	defer httpServer.Close()

	httpsServer := httptest.NewTLSServer(downloadHttpHandFunc)
	defer httpsServer.Close()

	httpSrcUri := httpServer.URL
	httpsSrcUri := httpsServer.URL

	parser := New(FileTypePDF)
	_, err = parser.CopyWithOption(WithEmptySourceOption().SetUri(httpSrcUri+"/"+targetFile), WithEmptyTargetOption().SetWriter(os.Stdout))
	if !a.True(ErrCodeProtoFileNoExist.Equal(err)) {
		return
	}

	ft, err := parser.CopyByURI(httpSrcUri+"/"+srcFile, "file://"+targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(ft, FileTypePDF) {
		return
	}
	srcBytes, err := ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err := ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(srcBytes, targetBytes) {
		return
	}

	ft, err = parser.CopyByURI(httpsSrcUri+"/"+srcFile, "file://"+targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(ft, FileTypePDF) {
		return
	}

	srcBytes, err = ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err = ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	a.Equal(srcBytes, targetBytes)

}

func TestParser_MimeProtoWrite(t *testing.T) {
	defer os.RemoveAll(targetFile)

	a := assert.New(t)

	fBytes, err := ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	fb64 := base64.StdEncoding.EncodeToString(fBytes)
	mimeStr := "data:application/pdf;base64," + fb64

	parser := New(FileTypePDF)
	ft, err := parser.CopyByURI(mimeStr, "file://"+targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(ft, FileTypePDF) {
		return
	}

	srcBytes, err := ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err := ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	a.Equal(srcBytes, targetBytes)
}

func TestChineseFile(t *testing.T) {
	a := assert.New(t)

	defer os.RemoveAll(targetFile)

	pdfSrcFile := chineseSrcFile

	parser := New(FileTypePDF)

	_, err := parser.CopyWithOption(WithEmptySourceOption().SetUri("file://"+targetFile), WithEmptyTargetOption().SetWriter(os.Stdout))
	if !a.True(ErrCodeProtoFileOpen.Equal(err)) {
		return
	}

	encUri := url.QueryEscape("file://" + pdfSrcFile)

	ft, err := parser.CopyByURI(encUri, "file://"+targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.Equal(ft, FileTypePDF) {
		return
	}

	stat, err := os.Stat(targetFile)
	if !a.NoError(err) {
		return
	}

	if !a.False(stat.IsDir()) {
		return
	}

	srcBytes, err := ioutil.ReadFile(pdfSrcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err := ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	a.Equal(srcBytes, targetBytes)

}

func TestCopyToHttp(t *testing.T) {
	var err error
	defer os.RemoveAll(targetFile)

	a := assert.New(t)

	httpUploadServer := httptest.NewServer(uploadHttpHandFunc)
	defer httpUploadServer.Close()

	httpTargetUri := httpUploadServer.URL

	parser := New(FileTypePDF)
	ft, err := parser.CopyWithOption(WithEmptySourceOption().SetUri("file://"+srcFile),
		WithHttpTargetOption(&TargetHttpOption{
			FieldName: "pdfFile",
			Filename:  "test.pdf",
			Headers: map[string]string{
				"_t": "123456",
			},
			Form: map[string]string{"token": "123456"},
		}).SetUri(httpTargetUri+"/"+targetFile))
	if !a.NoError(err) {
		return
	}

	if !a.Equal(FileTypePDF, ft) {
		return
	}

	srcBytes, err := ioutil.ReadFile(srcFile)
	if !a.NoError(err) {
		return
	}

	targetBytes, err := ioutil.ReadFile(targetFile)
	if !a.NoError(err) {
		return
	}

	a.Equal(srcBytes, targetBytes)
}
